{"version":3,"file":"main.js","mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,wBAAwB,UAAU;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa;AACb;AACA;AACA;;AAEA;;;;;;;;;;;AC9BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,YAAY;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,aAAa;AACb;;AAEA;;;;;;;UChCA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;ACtBA;AACA,oBAAoB,mBAAO,CAAC,2CAAe;AAC3C,kBAAkB,mBAAO,CAAC,uCAAa","sources":["webpack://battle-ship/./src/Gameboard.js","webpack://battle-ship/./src/shipFactory.js","webpack://battle-ship/webpack/bootstrap","webpack://battle-ship/./src/index.js"],"sourcesContent":["/* eslint-disable no-unused-vars */\nconst Gameboard = () => {\n    const board = {\n        size: {\n            columns: 0,\n            rows: 0,\n        },\n        grid: [],\n    };\n\n    function gridCreate(x) {\n        const grid = x * x;\n        for (let i = 0; i < grid; i += 1) {\n            board.grid\n                .push(i + 1);\n        }\n    }\n\n    function gridSize(x) {\n        board.size.columns = x;\n        board.size.rows = x;\n        gridCreate(x);\n        return board;\n    }\n\n    return { board, gridSize };\n};\nconst player = Gameboard();\nplayer.gridSize(10);\n\nmodule.exports = Gameboard;\n","/* eslint-disable no-console */\n\n// Creates each ship object\nconst ShipFactory = () => {\n    const shipSegments = {\n        status: 'afloat',\n        size: [],\n        position: undefined,\n    };\n\n    const createShip = (length) => {\n        for (let i = 0; i < length; i += 1) {\n            shipSegments.size.push('safe');\n        }\n        return shipSegments;\n    };\n\n    function isSunk() {\n        const shipSunk = shipSegments.size.every((x) => x === 'hit');\n        const shipStatus = shipSunk ? shipSegments.status = 'sunk!' : false;\n        return shipStatus;\n    }\n\n    const isHit = (position) => {\n        shipSegments.size.splice(position, 1, 'hit');\n        isSunk();\n        return shipSegments;\n    };\n\n    return { createShip, isHit };\n};\n\nmodule.exports = ShipFactory;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/* eslint-disable no-unused-vars */\nconst ShipFactory = require('./shipFactory');\nconst Gameboard = require('./Gameboard');\n"],"names":[],"sourceRoot":""}